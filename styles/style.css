/* FLEX BOX */
h1{
    text-align: center;
}
/* Container */
#container{
    height: 33rem;
    min-width: 22rem;
    padding: 50px;
    background-color:rgb(170, 125, 212);
    text-align: center;
    border: 1px solid blue;
    margin: 50px 400px;
    display: flex;
    flex-flow: column wrap;

}

/* kids from Container */
#container > * {
    padding: 30px;
    
}

/* Article */
.article{
    justify-content: center;
    display: flex;
    flex-direction: row;
}
/* kids from Article */
.aside{
   
   justify-content: center;
   display: flex;
}
button{
    border-radius: 10px;
    margin: 2px;
}
#equal{
    text-align: center;
}

/* Mobile-first approach
    1. header
    2. main
    3. aside
*/
#screen{
    min-height: 4rem;
    min-width: 16rem;
}
.operation, .number{
    min-height: 2.7rem;
    min-width: 2.7rem;
    padding: 10px;
}


/* Medium screens */
@media all and (min-width: 600px) {
    .equal {
        background-color: red;
    }
}

/* Large screens */
  /* We invert order of first sidebar and main
   * And tell the main element to take twice as much width as the other two sidebars
   credit: https://css-tricks.com/snippets/css/a-guide-to-flexbox/
   */
   .content{
    flex: 4 0px;
    order: 1;
   }
   .aside{
    order: 2;
   
   }